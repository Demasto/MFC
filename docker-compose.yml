version: '3.4'

volumes:
  pgadmin-data:
  pg-data:
    
services:

  postgres:
    container_name: postgres_container
    image: postgres:latest
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
      - ./MFC.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    environment:
      POSTGRES_DB: "MFC"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      PGDATA: "/var/lib/postgresql/data/pgdata"
      
  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:7.2
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: postgres
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
#  cache:
#    container_name: cache_container
#    image: redis:6.2
#    restart: always
#    ports:
#      - '6379:6379'
#    command: redis-server --loglevel warning
#    volumes:
#      - cache:/data

#  api:
#    container_name: web_api_container
#    image: webapi
#    restart: always
#    build:
#      context: .
#      dockerfile: MFC.WebApi/WebApi/Dockerfile
#    depends_on: [ "postgres" ]
#    ports:
#      - "8080:80"
#    networks:
#      - app-network
#    environment:
#      DATABASE_CONNECT: "Server=postgres;Port=5432;Database=MFC;User Id=postgres;Password=postgres"
#      ASPNETCORE_HTTP_PORTS: "80"
      
